@{
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}
<!DOCTYPE html>

<html>
<!--This is the main view. I designed it with the thought of switching between List and Grid view, while
    preserving the same random array, using Ajax. I was successful at understanding and implementing Ajax
    calls in ASP.NET by creating partial views and Microsoft's implementation of the jQuery Ajax library.

    Currently, the Ajax calls happen as they should (without refreshing the page), but the array will be
    regenerated each time. See HomeController for additional comments about this decision.

    Bloopers: Spent several hours troubleshooting the Ajax calls, only to notice that my UpdateTargetId
    <div> had "class" as an attribute, instead of "id". Tears were shed...-->
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Michael Reina - Pandell Random Number Generator (MVC)</title>
    <script src="~/Scripts/jquery-1.10.2.min.js" type="text/javascript"></script>
    <script src="~/Scripts/jquery.unobtrusive-ajax.min.js" type="text/javascript"></script>
    <link rel="stylesheet" type="text/css" href="~/Content/bootstrap.css" />

</head>
<body>
    <br />
    <h3>Instructions</h3>
    <p>Use the two buttons bellow to create a list of random numbers from 1-10,000. Also, take a look at the @Html.ActionLink("About", "About", "Home") page, where I go into detail about the development of the application. Thanks!</p>
    <br />
    <div class="btn-group btn-group-justified" role="group">
        @Ajax.ActionLink("List View", "listView", "Home", new AjaxOptions()
   {
       HttpMethod = "GET",
       UpdateTargetId = "container",
       InsertionMode = InsertionMode.Replace
   }, new { @class = "btn btn-primary btn-lg", @role = "button" })

        @Ajax.ActionLink("Grid View", "gridView", "Home",  new AjaxOptions()
        {
            HttpMethod = "GET",
            UpdateTargetId = "container",
            InsertionMode = InsertionMode.Replace
        },  new { @class="btn btn-primary btn-lg", @role = "button"})

    </div>
    <br />

        <!--This div caused me issues. Make sure the attribute is an "id" and not a "class".
            This div will be used as a container for all Ajax calls.-->
        <div id="container" class="container"></div>
</body>

</html>
